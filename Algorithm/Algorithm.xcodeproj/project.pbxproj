// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 50;
	objects = {

/* Begin PBXBuildFile section */
		1406F80D2469921E0031ACDE /* 203_移除链表元素.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 1406F80C2469921E0031ACDE /* 203_移除链表元素.cpp */; };
		140745D12472CAF5008602BC /* 86_分隔链表.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 140745D02472CAF5008602BC /* 86_分隔链表.cpp */; };
		140745D324741AB6008602BC /* 234_回文链表.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 140745D224741AB6008602BC /* 234_回文链表.cpp */; };
		140B435A2486875D00C4DDB9 /* 739_每日温度.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 140B43592486875C00C4DDB9 /* 739_每日温度.cpp */; };
		14315D6025D81CA700FC0B16 /* 88 合并两个有序数组.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14315D5F25D81CA700FC0B16 /* 88 合并两个有序数组.cpp */; };
		14315D6325D8229000FC0B16 /* 75 颜色分类.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14315D6225D8229000FC0B16 /* 75 颜色分类.cpp */; };
		14315D6625D8E49800FC0B16 /* 面试题 16 16  部分排序.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14315D6525D8E49800FC0B16 /* 面试题 16 16  部分排序.cpp */; };
		14315D6925D8F34200FC0B16 /* 977 有序数组的平方.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14315D6825D8F34200FC0B16 /* 977 有序数组的平方.cpp */; };
		14315D6E25D90E7200FC0B16 /* 203 移除链表元素.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14315D6D25D90E7200FC0B16 /* 203 移除链表元素.cpp */; };
		14315D7225D912B900FC0B16 /* 2 两数相加.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14315D7125D912B900FC0B16 /* 2 两数相加.cpp */; };
		14315D7525D9199E00FC0B16 /* 160 相交链表.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14315D7425D9199E00FC0B16 /* 160 相交链表.cpp */; };
		14315D7825D967E900FC0B16 /* 86 分隔链表.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14315D7725D967E900FC0B16 /* 86 分隔链表.cpp */; };
		14315D7B25D96CB200FC0B16 /* 234 回文链表.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14315D7A25D96CB200FC0B16 /* 234 回文链表.cpp */; };
		14315D8025DA6ECC00FC0B16 /* 155 最小栈.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14315D7F25DA6ECC00FC0B16 /* 155 最小栈.cpp */; };
		14315D8325DA7B6300FC0B16 /* 239 滑动窗口最大值.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14315D8225DA7B6300FC0B16 /* 239 滑动窗口最大值.cpp */; };
		14315D8725DABBF900FC0B16 /* 654 最大二叉树.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14315D8625DABBF900FC0B16 /* 654 最大二叉树.cpp */; };
		14315D8A25DBBC2A00FC0B16 /* 739 每日温度.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14315D8925DBBC2A00FC0B16 /* 739 每日温度.cpp */; };
		1434585A246D86060079B93B /* 160_相交链表.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14345859246D86050079B93B /* 160_相交链表.cpp */; };
		1442F1F32477E2EC0076C484 /* 155_最小栈.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 1442F1F22477E2EC0076C484 /* 155_最小栈.cpp */; };
		144B983324420542003B5364 /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 144B983224420542003B5364 /* main.cpp */; };
		144B983C24420768003B5364 /* 88-合并两个有序数组.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 144B983B24420768003B5364 /* 88-合并两个有序数组.cpp */; };
		144B983E24420E91003B5364 /* 75_颜色分类.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 144B983D24420E91003B5364 /* 75_颜色分类.cpp */; };
		144F5EF425DC096F0072F724 /* 42 接雨水.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 144F5EF325DC096F0072F724 /* 42 接雨水.cpp */; };
		145A731F249E5556003DA40A /* 剑指 Offer 47_礼物的最大价值.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 145A731E249E5556003DA40A /* 剑指 Offer 47_礼物的最大价值.cpp */; };
		147B976B25DE6EE70065BA6F /* 面试题 01 09  字符串轮转.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 147B976A25DE6EE70065BA6F /* 面试题 01 09  字符串轮转.cpp */; };
		147B976F25DE73DC0065BA6F /* 572 另一个树的子树.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 147B976E25DE73DC0065BA6F /* 572 另一个树的子树.cpp */; };
		14820A55249A6FFC005E60A3 /* 3_无重复字符的最长子串.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14820A54249A6FFC005E60A3 /* 3_无重复字符的最长子串.cpp */; };
		1495B4C9246C2D6700F95169 /* 2_两数相加.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 1495B4C8246C2D6700F95169 /* 2_两数相加.cpp */; };
		1498ED4624A86DC200F10081 /* 64_最小路径和.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 1498ED4524A86DC200F10081 /* 64_最小路径和.cpp */; };
		1498ED4824A8749400F10081 /* 62_不同路径.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 1498ED4724A8749400F10081 /* 62_不同路径.cpp */; };
		1498F0BC24A89B9700F10081 /* 72_编辑距离.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 1498F0BB24A89B9700F10081 /* 72_编辑距离.cpp */; };
		1498F43124A8F29200F10081 /* 5_最长回文子串.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 1498F42F24A8F29200F10081 /* 5_最长回文子串.cpp */; };
		14A17D2C24A5F13E001CCC5D /* 322_零钱兑换.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14A17D2B24A5F13E001CCC5D /* 322_零钱兑换.cpp */; };
		14DCDDC624B09D8D002E9BBA /* 面试题 08_11_硬币.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14DCDDC524B09D8D002E9BBA /* 面试题 08_11_硬币.cpp */; };
		14DCDDC824B0AE9F002E9BBA /* 300_最长上升子序列.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14DCDDC724B0AE9F002E9BBA /* 300_最长上升子序列.cpp */; };
		14DCE27724B9A3190067EB9D /* 673_最长递增子序列的个数.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14DCE27624B9A3190067EB9D /* 673_最长递增子序列的个数.cpp */; };
		14DCE27924B9B0090067EB9D /* 1235_规划兼职工作.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14DCE27824B9B0090067EB9D /* 1235_规划兼职工作.cpp */; };
		14DCE27B24BA01AD0067EB9D /* 236_二叉树的最近公共祖先.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14DCE27A24BA01AD0067EB9D /* 236_二叉树的最近公共祖先.cpp */; };
		14DF4B0F24C2C0FF00769F04 /* 94_二叉树的中序遍历.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14DF4B0E24C2C0FF00769F04 /* 94_二叉树的中序遍历.cpp */; };
		14DF4B1124C2C9E500769F04 /* 98_验证二叉搜索树.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14DF4B1024C2C9E500769F04 /* 98_验证二叉搜索树.cpp */; };
		14DF4B1324C40E3800769F04 /* 230_二叉搜索树中第K小的元素.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14DF4B1224C40E3800769F04 /* 230_二叉搜索树中第K小的元素.cpp */; };
		14DF4B1624C4198300769F04 /* 101_对称二叉树.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14DF4B1424C4198300769F04 /* 101_对称二叉树.cpp */; };
		14DF4B1824C4346D00769F04 /* 108. 将有序数组转换为二叉搜索树.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14DF4B1724C4346D00769F04 /* 108. 将有序数组转换为二叉搜索树.cpp */; };
		14DF4B1A24C4363000769F04 /* 102_二叉树的层序遍历.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14DF4B1924C4363000769F04 /* 102_二叉树的层序遍历.cpp */; };
		14DF4B1C24C445FD00769F04 /* 104_二叉树的最大深度.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14DF4B1B24C445FD00769F04 /* 104_二叉树的最大深度.cpp */; };
		14DF4B1E24C49E4800769F04 /* 17_电话号码的字母组合.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14DF4B1D24C49E4800769F04 /* 17_电话号码的字母组合.cpp */; };
		14E4986124CA8FD300C4A465 /* 47_全排列 II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14E4986024CA8FD300C4A465 /* 47_全排列 II.cpp */; };
		14E4986324CA9B7400C4A465 /* 22_括号生成.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14E4986224CA9B7400C4A465 /* 22_括号生成.cpp */; };
		14E93F44247D73D200E2C8A2 /* 654_最大二叉树.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14E93F43247D73D200E2C8A2 /* 654_最大二叉树.cpp */; };
		14EC3A4E244B31D2002BF0C6 /* 面试题 16_16 部分排序.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14EC3A4D244B31D2002BF0C6 /* 面试题 16_16 部分排序.cpp */; };
		14EC53E8247C1DAF00B65186 /* 239_滑动窗口最大值.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14EC53E7247C1DAF00B65186 /* 239_滑动窗口最大值.cpp */; };
		14F205E7248DFD5A0023F308 /* 42_接雨水.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14F205E6248DFD5A0023F308 /* 42_接雨水.cpp */; };
		14FE465E25E11F5E00546429 /* 151 翻转字符串里的单词.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14FE465D25E11F5E00546429 /* 151 翻转字符串里的单词.cpp */; };
		14FE466125E20EC200546429 /* 3 无重复字符的最长子串.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14FE466025E20EC200546429 /* 3 无重复字符的最长子串.cpp */; };
		14FE466425E2446C00546429 /* 剑指 Offer 47 礼物的最大价值.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14FE466325E2446C00546429 /* 剑指 Offer 47 礼物的最大价值.cpp */; };
		14FE466925E24E2A00546429 /* 121 买卖股票的最佳时机.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14FE466825E24E2A00546429 /* 121 买卖股票的最佳时机.cpp */; };
		14FE466C25E2AF9A00546429 /* 72  编辑距离.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 14FE466B25E2AF9A00546429 /* 72  编辑距离.cpp */; };
		8509336724C5FF0200A1167F /* 46_全排列.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 8509336624C5FF0200A1167F /* 46_全排列.cpp */; };
		854E987424ACE1AA001E980E /* 1143_最长公共子序列.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 854E987324ACE1AA001E980E /* 1143_最长公共子序列.cpp */; };
		856C60A7260E3C2B00CD7161 /* 146 LRU 缓存机制.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 856C60A6260E3C2B00CD7161 /* 146 LRU 缓存机制.cpp */; };
		85768478248FCE7B00B0EC39 /* 面试题 01_09_ 字符串轮转.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85768477248FCE7B00B0EC39 /* 面试题 01_09_ 字符串轮转.cpp */; };
		8576847A248FD2A900B0EC39 /* 572_另一个树的子树.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85768479248FD2A900B0EC39 /* 572_另一个树的子树.cpp */; };
		8576847C24913BB400B0EC39 /* 242_有效的字母异位词.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 8576847B24913BB400B0EC39 /* 242_有效的字母异位词.cpp */; };
		85771A1125FE504800264333 /* 283 移动零.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85771A1025FE504800264333 /* 283 移动零.cpp */; };
		85771A1425FE576E00264333 /* 15 三数之和.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85771A1325FE576E00264333 /* 15 三数之和.cpp */; };
		857E1E3B24E9962300A8F8C9 /* 146_LRU缓存机制.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 857E1E3A24E9962300A8F8C9 /* 146_LRU缓存机制.cpp */; };
		858FEA4424D1CD9300436891 /* 15_三数之和.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 858FEA4324D1CD9300436891 /* 15_三数之和.cpp */; };
		858FEA4624D1D64B00436891 /* 50_Pow(x, n).cpp in Sources */ = {isa = PBXBuildFile; fileRef = 858FEA4524D1D64B00436891 /* 50_Pow(x, n).cpp */; };
		8590495A24E2F1A500959443 /* 剑指 Offer 62_圆圈中最后剩下的数字.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 8590495924E2F1A500959443 /* 剑指 Offer 62_圆圈中最后剩下的数字.cpp */; };
		8590495C24E4375000959443 /* 54_螺旋矩阵.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 8590495B24E4375000959443 /* 54_螺旋矩阵.cpp */; };
		8596E2B325E409CD00509FBF /* 5 最长回文子串.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 8596E2B225E409CD00509FBF /* 5 最长回文子串.cpp */; };
		85A2D0AA25ED3FBC000F7D0C /* 17 电话号码的字母组合.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85A2D0A925ED3FBC000F7D0C /* 17 电话号码的字母组合.cpp */; };
		85A2D0AE25EE94A5000F7D0C /* 46 全排列.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85A2D0AD25EE94A5000F7D0C /* 46 全排列.cpp */; };
		85A2D0B125EFBD50000F7D0C /* 22 括号生成.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85A2D0B025EFBD50000F7D0C /* 22 括号生成.cpp */; };
		85A2D0B425EFC5BF000F7D0C /* 113 路径总和 II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85A2D0B325EFC5BF000F7D0C /* 113 路径总和 II.cpp */; };
		85A48CA324B375ED001CA490 /* 70_爬楼梯.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85A48CA224B375ED001CA490 /* 70_爬楼梯.cpp */; };
		85A48CA524B3794C001CA490 /* 198_打家劫舍.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85A48CA424B3794C001CA490 /* 198_打家劫舍.cpp */; };
		85A48CA724B38932001CA490 /* 213_打家劫舍 II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85A48CA624B38932001CA490 /* 213_打家劫舍 II.cpp */; };
		85A90A1224AF814D00E12E40 /* 53_最大子序和.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85A90A1124AF814D00E12E40 /* 53_最大子序和.cpp */; };
		85BCD9272497D1750021A47D /* 151_翻转字符串里的单词.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85BCD9262497D1750021A47D /* 151_翻转字符串里的单词.cpp */; };
		85C8B9E225E6A544001F69F6 /* 236 二叉树的最近公共祖先.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85C8B9E125E6A544001F69F6 /* 236 二叉树的最近公共祖先.cpp */; };
		85C8B9E625E7F385001F69F6 /* 99 恢复二叉搜索树.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85C8B9E525E7F385001F69F6 /* 99 恢复二叉搜索树.cpp */; };
		85CA54F2249FA89D006E2232 /* 121_买卖股票的最佳时机.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85CA54F1249FA89D006E2232 /* 121_买卖股票的最佳时机.cpp */; };
		85D9FF5224CDDBD400A4C00A /* 283_移动零.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85D9FF5124CDDBD400A4C00A /* 283_移动零.cpp */; };
		85D9FF5424CDE38100A4C00A /* 1_两数之和.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85D9FF5324CDE38100A4C00A /* 1_两数之和.cpp */; };
		85EA1E9D24BCB6EC00E46E14 /* 99_恢复二叉搜索树.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85EA1E9C24BCB6EC00E46E14 /* 99_恢复二叉搜索树.cpp */; };
		85F7EAE224B4C72C008B2991 /* 674_最长连续递增序列.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85F7EAE124B4C72C008B2991 /* 674_最长连续递增序列.cpp */; };
		85F7EAE424B4CB50008B2991 /* 63_不同路径 II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85F7EAE324B4CB50008B2991 /* 63_不同路径 II.cpp */; };
		85F7EAE624B4D0C6008B2991 /* 122_买卖股票的最佳时机 II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 85F7EAE524B4D0C6008B2991 /* 122_买卖股票的最佳时机 II.cpp */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		144B982D24420542003B5364 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		1406F80C2469921E0031ACDE /* 203_移除链表元素.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "203_移除链表元素.cpp"; sourceTree = "<group>"; };
		140745D02472CAF5008602BC /* 86_分隔链表.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "86_分隔链表.cpp"; sourceTree = "<group>"; };
		140745D224741AB6008602BC /* 234_回文链表.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "234_回文链表.cpp"; sourceTree = "<group>"; };
		140B43592486875C00C4DDB9 /* 739_每日温度.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "739_每日温度.cpp"; sourceTree = "<group>"; };
		14315D5F25D81CA700FC0B16 /* 88 合并两个有序数组.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "88 合并两个有序数组.cpp"; sourceTree = "<group>"; };
		14315D6225D8229000FC0B16 /* 75 颜色分类.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "75 颜色分类.cpp"; sourceTree = "<group>"; };
		14315D6525D8E49800FC0B16 /* 面试题 16 16  部分排序.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "面试题 16 16  部分排序.cpp"; sourceTree = "<group>"; };
		14315D6825D8F34200FC0B16 /* 977 有序数组的平方.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "977 有序数组的平方.cpp"; sourceTree = "<group>"; };
		14315D6D25D90E7200FC0B16 /* 203 移除链表元素.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "203 移除链表元素.cpp"; sourceTree = "<group>"; };
		14315D7125D912B900FC0B16 /* 2 两数相加.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "2 两数相加.cpp"; sourceTree = "<group>"; };
		14315D7425D9199E00FC0B16 /* 160 相交链表.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "160 相交链表.cpp"; sourceTree = "<group>"; };
		14315D7725D967E900FC0B16 /* 86 分隔链表.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "86 分隔链表.cpp"; sourceTree = "<group>"; };
		14315D7A25D96CB200FC0B16 /* 234 回文链表.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "234 回文链表.cpp"; sourceTree = "<group>"; };
		14315D7F25DA6ECC00FC0B16 /* 155 最小栈.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "155 最小栈.cpp"; sourceTree = "<group>"; };
		14315D8225DA7B6300FC0B16 /* 239 滑动窗口最大值.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "239 滑动窗口最大值.cpp"; sourceTree = "<group>"; };
		14315D8625DABBF900FC0B16 /* 654 最大二叉树.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "654 最大二叉树.cpp"; sourceTree = "<group>"; };
		14315D8925DBBC2A00FC0B16 /* 739 每日温度.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "739 每日温度.cpp"; sourceTree = "<group>"; };
		14345859246D86050079B93B /* 160_相交链表.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "160_相交链表.cpp"; sourceTree = "<group>"; };
		1442F1F22477E2EC0076C484 /* 155_最小栈.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "155_最小栈.cpp"; sourceTree = "<group>"; };
		144B982F24420542003B5364 /* Algorithm */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = Algorithm; sourceTree = BUILT_PRODUCTS_DIR; };
		144B983224420542003B5364 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		144B983B24420768003B5364 /* 88-合并两个有序数组.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "88-合并两个有序数组.cpp"; sourceTree = "<group>"; };
		144B983D24420E91003B5364 /* 75_颜色分类.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "75_颜色分类.cpp"; sourceTree = "<group>"; };
		144F5EF325DC096F0072F724 /* 42 接雨水.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "42 接雨水.cpp"; sourceTree = "<group>"; };
		145A731E249E5556003DA40A /* 剑指 Offer 47_礼物的最大价值.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "剑指 Offer 47_礼物的最大价值.cpp"; sourceTree = "<group>"; };
		147B976A25DE6EE70065BA6F /* 面试题 01 09  字符串轮转.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "面试题 01 09  字符串轮转.cpp"; sourceTree = "<group>"; };
		147B976E25DE73DC0065BA6F /* 572 另一个树的子树.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "572 另一个树的子树.cpp"; sourceTree = "<group>"; };
		14820A54249A6FFC005E60A3 /* 3_无重复字符的最长子串.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "3_无重复字符的最长子串.cpp"; sourceTree = "<group>"; };
		1495B4C8246C2D6700F95169 /* 2_两数相加.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "2_两数相加.cpp"; sourceTree = "<group>"; };
		1498ED4524A86DC200F10081 /* 64_最小路径和.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "64_最小路径和.cpp"; sourceTree = "<group>"; };
		1498ED4724A8749400F10081 /* 62_不同路径.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "62_不同路径.cpp"; sourceTree = "<group>"; };
		1498F0BB24A89B9700F10081 /* 72_编辑距离.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "72_编辑距离.cpp"; sourceTree = "<group>"; };
		1498F42F24A8F29200F10081 /* 5_最长回文子串.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5_最长回文子串.cpp"; sourceTree = "<group>"; };
		14A17D2B24A5F13E001CCC5D /* 322_零钱兑换.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "322_零钱兑换.cpp"; sourceTree = "<group>"; };
		14DCDDC524B09D8D002E9BBA /* 面试题 08_11_硬币.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "面试题 08_11_硬币.cpp"; sourceTree = "<group>"; };
		14DCDDC724B0AE9F002E9BBA /* 300_最长上升子序列.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "300_最长上升子序列.cpp"; sourceTree = "<group>"; };
		14DCE27624B9A3190067EB9D /* 673_最长递增子序列的个数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "673_最长递增子序列的个数.cpp"; sourceTree = "<group>"; };
		14DCE27824B9B0090067EB9D /* 1235_规划兼职工作.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1235_规划兼职工作.cpp"; sourceTree = "<group>"; };
		14DCE27A24BA01AD0067EB9D /* 236_二叉树的最近公共祖先.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "236_二叉树的最近公共祖先.cpp"; sourceTree = "<group>"; };
		14DF4B0E24C2C0FF00769F04 /* 94_二叉树的中序遍历.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "94_二叉树的中序遍历.cpp"; sourceTree = "<group>"; };
		14DF4B1024C2C9E500769F04 /* 98_验证二叉搜索树.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "98_验证二叉搜索树.cpp"; sourceTree = "<group>"; };
		14DF4B1224C40E3800769F04 /* 230_二叉搜索树中第K小的元素.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "230_二叉搜索树中第K小的元素.cpp"; sourceTree = "<group>"; };
		14DF4B1424C4198300769F04 /* 101_对称二叉树.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "101_对称二叉树.cpp"; sourceTree = "<group>"; };
		14DF4B1724C4346D00769F04 /* 108. 将有序数组转换为二叉搜索树.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "108. 将有序数组转换为二叉搜索树.cpp"; sourceTree = "<group>"; };
		14DF4B1924C4363000769F04 /* 102_二叉树的层序遍历.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "102_二叉树的层序遍历.cpp"; sourceTree = "<group>"; };
		14DF4B1B24C445FD00769F04 /* 104_二叉树的最大深度.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "104_二叉树的最大深度.cpp"; sourceTree = "<group>"; };
		14DF4B1D24C49E4800769F04 /* 17_电话号码的字母组合.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "17_电话号码的字母组合.cpp"; sourceTree = "<group>"; };
		14E4986024CA8FD300C4A465 /* 47_全排列 II.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "47_全排列 II.cpp"; sourceTree = "<group>"; };
		14E4986224CA9B7400C4A465 /* 22_括号生成.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "22_括号生成.cpp"; sourceTree = "<group>"; };
		14E93F43247D73D200E2C8A2 /* 654_最大二叉树.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "654_最大二叉树.cpp"; sourceTree = "<group>"; };
		14EC3A4D244B31D2002BF0C6 /* 面试题 16_16 部分排序.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "面试题 16_16 部分排序.cpp"; sourceTree = "<group>"; };
		14EC53E7247C1DAF00B65186 /* 239_滑动窗口最大值.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "239_滑动窗口最大值.cpp"; sourceTree = "<group>"; };
		14F205E6248DFD5A0023F308 /* 42_接雨水.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "42_接雨水.cpp"; sourceTree = "<group>"; };
		14FE465D25E11F5E00546429 /* 151 翻转字符串里的单词.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "151 翻转字符串里的单词.cpp"; sourceTree = "<group>"; };
		14FE466025E20EC200546429 /* 3 无重复字符的最长子串.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "3 无重复字符的最长子串.cpp"; sourceTree = "<group>"; };
		14FE466325E2446C00546429 /* 剑指 Offer 47 礼物的最大价值.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "剑指 Offer 47 礼物的最大价值.cpp"; sourceTree = "<group>"; };
		14FE466825E24E2A00546429 /* 121 买卖股票的最佳时机.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "121 买卖股票的最佳时机.cpp"; sourceTree = "<group>"; };
		14FE466B25E2AF9A00546429 /* 72  编辑距离.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "72  编辑距离.cpp"; sourceTree = "<group>"; };
		8509336624C5FF0200A1167F /* 46_全排列.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "46_全排列.cpp"; sourceTree = "<group>"; };
		854E987324ACE1AA001E980E /* 1143_最长公共子序列.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1143_最长公共子序列.cpp"; sourceTree = "<group>"; };
		856C60A6260E3C2B00CD7161 /* 146 LRU 缓存机制.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "146 LRU 缓存机制.cpp"; sourceTree = "<group>"; };
		85768477248FCE7B00B0EC39 /* 面试题 01_09_ 字符串轮转.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "面试题 01_09_ 字符串轮转.cpp"; sourceTree = "<group>"; };
		85768479248FD2A900B0EC39 /* 572_另一个树的子树.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "572_另一个树的子树.cpp"; sourceTree = "<group>"; };
		8576847B24913BB400B0EC39 /* 242_有效的字母异位词.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "242_有效的字母异位词.cpp"; sourceTree = "<group>"; };
		85771A1025FE504800264333 /* 283 移动零.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "283 移动零.cpp"; sourceTree = "<group>"; };
		85771A1325FE576E00264333 /* 15 三数之和.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "15 三数之和.cpp"; sourceTree = "<group>"; };
		857E1E3A24E9962300A8F8C9 /* 146_LRU缓存机制.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "146_LRU缓存机制.cpp"; sourceTree = "<group>"; };
		858FEA4324D1CD9300436891 /* 15_三数之和.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "15_三数之和.cpp"; sourceTree = "<group>"; };
		858FEA4524D1D64B00436891 /* 50_Pow(x, n).cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "50_Pow(x, n).cpp"; sourceTree = "<group>"; };
		8590495924E2F1A500959443 /* 剑指 Offer 62_圆圈中最后剩下的数字.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "剑指 Offer 62_圆圈中最后剩下的数字.cpp"; sourceTree = "<group>"; };
		8590495B24E4375000959443 /* 54_螺旋矩阵.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "54_螺旋矩阵.cpp"; sourceTree = "<group>"; };
		8596E2B225E409CD00509FBF /* 5 最长回文子串.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5 最长回文子串.cpp"; sourceTree = "<group>"; };
		85A2D0A925ED3FBC000F7D0C /* 17 电话号码的字母组合.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "17 电话号码的字母组合.cpp"; sourceTree = "<group>"; };
		85A2D0AD25EE94A5000F7D0C /* 46 全排列.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "46 全排列.cpp"; sourceTree = "<group>"; };
		85A2D0B025EFBD50000F7D0C /* 22 括号生成.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "22 括号生成.cpp"; sourceTree = "<group>"; };
		85A2D0B325EFC5BF000F7D0C /* 113 路径总和 II.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "113 路径总和 II.cpp"; sourceTree = "<group>"; };
		85A48CA224B375ED001CA490 /* 70_爬楼梯.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "70_爬楼梯.cpp"; sourceTree = "<group>"; };
		85A48CA424B3794C001CA490 /* 198_打家劫舍.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "198_打家劫舍.cpp"; sourceTree = "<group>"; };
		85A48CA624B38932001CA490 /* 213_打家劫舍 II.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "213_打家劫舍 II.cpp"; sourceTree = "<group>"; };
		85A90A1124AF814D00E12E40 /* 53_最大子序和.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "53_最大子序和.cpp"; sourceTree = "<group>"; };
		85BCD9262497D1750021A47D /* 151_翻转字符串里的单词.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "151_翻转字符串里的单词.cpp"; sourceTree = "<group>"; };
		85C8B9E125E6A544001F69F6 /* 236 二叉树的最近公共祖先.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "236 二叉树的最近公共祖先.cpp"; sourceTree = "<group>"; };
		85C8B9E525E7F385001F69F6 /* 99 恢复二叉搜索树.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "99 恢复二叉搜索树.cpp"; sourceTree = "<group>"; };
		85CA54F1249FA89D006E2232 /* 121_买卖股票的最佳时机.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "121_买卖股票的最佳时机.cpp"; sourceTree = "<group>"; };
		85D9FF5124CDDBD400A4C00A /* 283_移动零.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "283_移动零.cpp"; sourceTree = "<group>"; };
		85D9FF5324CDE38100A4C00A /* 1_两数之和.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1_两数之和.cpp"; sourceTree = "<group>"; };
		85EA1E9C24BCB6EC00E46E14 /* 99_恢复二叉搜索树.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "99_恢复二叉搜索树.cpp"; sourceTree = "<group>"; };
		85F7EAE124B4C72C008B2991 /* 674_最长连续递增序列.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "674_最长连续递增序列.cpp"; sourceTree = "<group>"; };
		85F7EAE324B4CB50008B2991 /* 63_不同路径 II.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "63_不同路径 II.cpp"; sourceTree = "<group>"; };
		85F7EAE524B4D0C6008B2991 /* 122_买卖股票的最佳时机 II.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "122_买卖股票的最佳时机 II.cpp"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		144B982C24420542003B5364 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		14315D5C25D81C4500FC0B16 /* 2021 */ = {
			isa = PBXGroup;
			children = (
				85A2D0A825ED38DE000F7D0C /* DFS */,
				85C8B9E425E7F374001F69F6 /* 二叉树 */,
				14FE466625E2447700546429 /* 动态规划 */,
				147B976925DE6ED00065BA6F /* 字符串 */,
				14315D7D25DA6B3A00FC0B16 /* 栈_队列 */,
				14315D6C25D8F96100FC0B16 /* 链表 */,
				14315D6B25D8F95500FC0B16 /* 数组 */,
				856C60A6260E3C2B00CD7161 /* 146 LRU 缓存机制.cpp */,
			);
			path = 2021;
			sourceTree = "<group>";
		};
		14315D5D25D81C5A00FC0B16 /* 2020 */ = {
			isa = PBXGroup;
			children = (
				85D9FF5324CDE38100A4C00A /* 1_两数之和.cpp */,
				1495B4C8246C2D6700F95169 /* 2_两数相加.cpp */,
				14820A54249A6FFC005E60A3 /* 3_无重复字符的最长子串.cpp */,
				1498F42F24A8F29200F10081 /* 5_最长回文子串.cpp */,
				858FEA4324D1CD9300436891 /* 15_三数之和.cpp */,
				14DF4B1D24C49E4800769F04 /* 17_电话号码的字母组合.cpp */,
				14E4986224CA9B7400C4A465 /* 22_括号生成.cpp */,
				14F205E6248DFD5A0023F308 /* 42_接雨水.cpp */,
				8509336624C5FF0200A1167F /* 46_全排列.cpp */,
				14E4986024CA8FD300C4A465 /* 47_全排列 II.cpp */,
				858FEA4524D1D64B00436891 /* 50_Pow(x, n).cpp */,
				85A90A1124AF814D00E12E40 /* 53_最大子序和.cpp */,
				8590495B24E4375000959443 /* 54_螺旋矩阵.cpp */,
				1498ED4724A8749400F10081 /* 62_不同路径.cpp */,
				85F7EAE324B4CB50008B2991 /* 63_不同路径 II.cpp */,
				1498ED4524A86DC200F10081 /* 64_最小路径和.cpp */,
				85A48CA224B375ED001CA490 /* 70_爬楼梯.cpp */,
				1498F0BB24A89B9700F10081 /* 72_编辑距离.cpp */,
				144B983D24420E91003B5364 /* 75_颜色分类.cpp */,
				140745D02472CAF5008602BC /* 86_分隔链表.cpp */,
				144B983B24420768003B5364 /* 88-合并两个有序数组.cpp */,
				14DF4B0E24C2C0FF00769F04 /* 94_二叉树的中序遍历.cpp */,
				14DF4B1024C2C9E500769F04 /* 98_验证二叉搜索树.cpp */,
				85EA1E9C24BCB6EC00E46E14 /* 99_恢复二叉搜索树.cpp */,
				14DF4B1424C4198300769F04 /* 101_对称二叉树.cpp */,
				14DF4B1924C4363000769F04 /* 102_二叉树的层序遍历.cpp */,
				14DF4B1B24C445FD00769F04 /* 104_二叉树的最大深度.cpp */,
				14DF4B1724C4346D00769F04 /* 108. 将有序数组转换为二叉搜索树.cpp */,
				85CA54F1249FA89D006E2232 /* 121_买卖股票的最佳时机.cpp */,
				85F7EAE524B4D0C6008B2991 /* 122_买卖股票的最佳时机 II.cpp */,
				857E1E3A24E9962300A8F8C9 /* 146_LRU缓存机制.cpp */,
				85BCD9262497D1750021A47D /* 151_翻转字符串里的单词.cpp */,
				1442F1F22477E2EC0076C484 /* 155_最小栈.cpp */,
				14345859246D86050079B93B /* 160_相交链表.cpp */,
				85A48CA424B3794C001CA490 /* 198_打家劫舍.cpp */,
				1406F80C2469921E0031ACDE /* 203_移除链表元素.cpp */,
				85A48CA624B38932001CA490 /* 213_打家劫舍 II.cpp */,
				14DF4B1224C40E3800769F04 /* 230_二叉搜索树中第K小的元素.cpp */,
				140745D224741AB6008602BC /* 234_回文链表.cpp */,
				14DCE27A24BA01AD0067EB9D /* 236_二叉树的最近公共祖先.cpp */,
				14EC53E7247C1DAF00B65186 /* 239_滑动窗口最大值.cpp */,
				8576847B24913BB400B0EC39 /* 242_有效的字母异位词.cpp */,
				85D9FF5124CDDBD400A4C00A /* 283_移动零.cpp */,
				14DCDDC724B0AE9F002E9BBA /* 300_最长上升子序列.cpp */,
				14A17D2B24A5F13E001CCC5D /* 322_零钱兑换.cpp */,
				85768479248FD2A900B0EC39 /* 572_另一个树的子树.cpp */,
				14E93F43247D73D200E2C8A2 /* 654_最大二叉树.cpp */,
				14DCE27624B9A3190067EB9D /* 673_最长递增子序列的个数.cpp */,
				85F7EAE124B4C72C008B2991 /* 674_最长连续递增序列.cpp */,
				140B43592486875C00C4DDB9 /* 739_每日温度.cpp */,
				854E987324ACE1AA001E980E /* 1143_最长公共子序列.cpp */,
				14DCE27824B9B0090067EB9D /* 1235_规划兼职工作.cpp */,
				145A731E249E5556003DA40A /* 剑指 Offer 47_礼物的最大价值.cpp */,
				8590495924E2F1A500959443 /* 剑指 Offer 62_圆圈中最后剩下的数字.cpp */,
				85768477248FCE7B00B0EC39 /* 面试题 01_09_ 字符串轮转.cpp */,
				14DCDDC524B09D8D002E9BBA /* 面试题 08_11_硬币.cpp */,
				14EC3A4D244B31D2002BF0C6 /* 面试题 16_16 部分排序.cpp */,
			);
			path = 2020;
			sourceTree = "<group>";
		};
		14315D6B25D8F95500FC0B16 /* 数组 */ = {
			isa = PBXGroup;
			children = (
				14315D5F25D81CA700FC0B16 /* 88 合并两个有序数组.cpp */,
				14315D6225D8229000FC0B16 /* 75 颜色分类.cpp */,
				14315D6525D8E49800FC0B16 /* 面试题 16 16  部分排序.cpp */,
				14315D6825D8F34200FC0B16 /* 977 有序数组的平方.cpp */,
				85771A1025FE504800264333 /* 283 移动零.cpp */,
				85771A1325FE576E00264333 /* 15 三数之和.cpp */,
			);
			path = "数组";
			sourceTree = "<group>";
		};
		14315D6C25D8F96100FC0B16 /* 链表 */ = {
			isa = PBXGroup;
			children = (
				14315D6D25D90E7200FC0B16 /* 203 移除链表元素.cpp */,
				14315D7125D912B900FC0B16 /* 2 两数相加.cpp */,
				14315D7425D9199E00FC0B16 /* 160 相交链表.cpp */,
				14315D7725D967E900FC0B16 /* 86 分隔链表.cpp */,
				14315D7A25D96CB200FC0B16 /* 234 回文链表.cpp */,
			);
			path = "链表";
			sourceTree = "<group>";
		};
		14315D7D25DA6B3A00FC0B16 /* 栈_队列 */ = {
			isa = PBXGroup;
			children = (
				14315D7F25DA6ECC00FC0B16 /* 155 最小栈.cpp */,
				14315D8225DA7B6300FC0B16 /* 239 滑动窗口最大值.cpp */,
				14315D8625DABBF900FC0B16 /* 654 最大二叉树.cpp */,
				14315D8925DBBC2A00FC0B16 /* 739 每日温度.cpp */,
				144F5EF325DC096F0072F724 /* 42 接雨水.cpp */,
			);
			path = "栈_队列";
			sourceTree = "<group>";
		};
		144B982624420542003B5364 = {
			isa = PBXGroup;
			children = (
				144B983124420542003B5364 /* Algorithm */,
				144B983024420542003B5364 /* Products */,
			);
			sourceTree = "<group>";
		};
		144B983024420542003B5364 /* Products */ = {
			isa = PBXGroup;
			children = (
				144B982F24420542003B5364 /* Algorithm */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		144B983124420542003B5364 /* Algorithm */ = {
			isa = PBXGroup;
			children = (
				14315D5D25D81C5A00FC0B16 /* 2020 */,
				14315D5C25D81C4500FC0B16 /* 2021 */,
				144B983224420542003B5364 /* main.cpp */,
			);
			path = Algorithm;
			sourceTree = "<group>";
		};
		147B976925DE6ED00065BA6F /* 字符串 */ = {
			isa = PBXGroup;
			children = (
				147B976A25DE6EE70065BA6F /* 面试题 01 09  字符串轮转.cpp */,
				147B976E25DE73DC0065BA6F /* 572 另一个树的子树.cpp */,
				14FE465D25E11F5E00546429 /* 151 翻转字符串里的单词.cpp */,
				14FE466025E20EC200546429 /* 3 无重复字符的最长子串.cpp */,
			);
			path = "字符串";
			sourceTree = "<group>";
		};
		14FE466625E2447700546429 /* 动态规划 */ = {
			isa = PBXGroup;
			children = (
				14FE466325E2446C00546429 /* 剑指 Offer 47 礼物的最大价值.cpp */,
				14FE466825E24E2A00546429 /* 121 买卖股票的最佳时机.cpp */,
				14FE466B25E2AF9A00546429 /* 72  编辑距离.cpp */,
				8596E2B225E409CD00509FBF /* 5 最长回文子串.cpp */,
			);
			path = "动态规划";
			sourceTree = "<group>";
		};
		85A2D0A825ED38DE000F7D0C /* DFS */ = {
			isa = PBXGroup;
			children = (
				85A2D0A925ED3FBC000F7D0C /* 17 电话号码的字母组合.cpp */,
				85A2D0AD25EE94A5000F7D0C /* 46 全排列.cpp */,
				85A2D0B025EFBD50000F7D0C /* 22 括号生成.cpp */,
				85A2D0B325EFC5BF000F7D0C /* 113 路径总和 II.cpp */,
			);
			path = DFS;
			sourceTree = "<group>";
		};
		85C8B9E425E7F374001F69F6 /* 二叉树 */ = {
			isa = PBXGroup;
			children = (
				85C8B9E125E6A544001F69F6 /* 236 二叉树的最近公共祖先.cpp */,
				85C8B9E525E7F385001F69F6 /* 99 恢复二叉搜索树.cpp */,
			);
			path = "二叉树";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		144B982E24420542003B5364 /* Algorithm */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 144B983624420542003B5364 /* Build configuration list for PBXNativeTarget "Algorithm" */;
			buildPhases = (
				144B982B24420542003B5364 /* Sources */,
				144B982C24420542003B5364 /* Frameworks */,
				144B982D24420542003B5364 /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Algorithm;
			productName = Algorithm;
			productReference = 144B982F24420542003B5364 /* Algorithm */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		144B982724420542003B5364 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 1100;
				ORGANIZATIONNAME = zack;
				TargetAttributes = {
					144B982E24420542003B5364 = {
						CreatedOnToolsVersion = 11.0;
					};
				};
			};
			buildConfigurationList = 144B982A24420542003B5364 /* Build configuration list for PBXProject "Algorithm" */;
			compatibilityVersion = "Xcode 9.3";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 144B982624420542003B5364;
			productRefGroup = 144B983024420542003B5364 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				144B982E24420542003B5364 /* Algorithm */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		144B982B24420542003B5364 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1406F80D2469921E0031ACDE /* 203_移除链表元素.cpp in Sources */,
				14DCE27B24BA01AD0067EB9D /* 236_二叉树的最近公共祖先.cpp in Sources */,
				85A2D0AE25EE94A5000F7D0C /* 46 全排列.cpp in Sources */,
				1498F43124A8F29200F10081 /* 5_最长回文子串.cpp in Sources */,
				85EA1E9D24BCB6EC00E46E14 /* 99_恢复二叉搜索树.cpp in Sources */,
				14E93F44247D73D200E2C8A2 /* 654_最大二叉树.cpp in Sources */,
				14FE466C25E2AF9A00546429 /* 72  编辑距离.cpp in Sources */,
				14315D6E25D90E7200FC0B16 /* 203 移除链表元素.cpp in Sources */,
				1442F1F32477E2EC0076C484 /* 155_最小栈.cpp in Sources */,
				140745D12472CAF5008602BC /* 86_分隔链表.cpp in Sources */,
				856C60A7260E3C2B00CD7161 /* 146 LRU 缓存机制.cpp in Sources */,
				14315D6325D8229000FC0B16 /* 75 颜色分类.cpp in Sources */,
				85A2D0B125EFBD50000F7D0C /* 22 括号生成.cpp in Sources */,
				144B983324420542003B5364 /* main.cpp in Sources */,
				8576847A248FD2A900B0EC39 /* 572_另一个树的子树.cpp in Sources */,
				14DF4B1824C4346D00769F04 /* 108. 将有序数组转换为二叉搜索树.cpp in Sources */,
				144B983C24420768003B5364 /* 88-合并两个有序数组.cpp in Sources */,
				145A731F249E5556003DA40A /* 剑指 Offer 47_礼物的最大价值.cpp in Sources */,
				14EC3A4E244B31D2002BF0C6 /* 面试题 16_16 部分排序.cpp in Sources */,
				14E4986124CA8FD300C4A465 /* 47_全排列 II.cpp in Sources */,
				14DF4B1324C40E3800769F04 /* 230_二叉搜索树中第K小的元素.cpp in Sources */,
				85A48CA724B38932001CA490 /* 213_打家劫舍 II.cpp in Sources */,
				147B976F25DE73DC0065BA6F /* 572 另一个树的子树.cpp in Sources */,
				14820A55249A6FFC005E60A3 /* 3_无重复字符的最长子串.cpp in Sources */,
				14DF4B1C24C445FD00769F04 /* 104_二叉树的最大深度.cpp in Sources */,
				14DCE27724B9A3190067EB9D /* 673_最长递增子序列的个数.cpp in Sources */,
				140B435A2486875D00C4DDB9 /* 739_每日温度.cpp in Sources */,
				14315D7825D967E900FC0B16 /* 86 分隔链表.cpp in Sources */,
				14FE465E25E11F5E00546429 /* 151 翻转字符串里的单词.cpp in Sources */,
				14DCDDC624B09D8D002E9BBA /* 面试题 08_11_硬币.cpp in Sources */,
				140745D324741AB6008602BC /* 234_回文链表.cpp in Sources */,
				85BCD9272497D1750021A47D /* 151_翻转字符串里的单词.cpp in Sources */,
				14FE466125E20EC200546429 /* 3 无重复字符的最长子串.cpp in Sources */,
				8509336724C5FF0200A1167F /* 46_全排列.cpp in Sources */,
				85768478248FCE7B00B0EC39 /* 面试题 01_09_ 字符串轮转.cpp in Sources */,
				85CA54F2249FA89D006E2232 /* 121_买卖股票的最佳时机.cpp in Sources */,
				8576847C24913BB400B0EC39 /* 242_有效的字母异位词.cpp in Sources */,
				8590495A24E2F1A500959443 /* 剑指 Offer 62_圆圈中最后剩下的数字.cpp in Sources */,
				1434585A246D86060079B93B /* 160_相交链表.cpp in Sources */,
				85A90A1224AF814D00E12E40 /* 53_最大子序和.cpp in Sources */,
				85F7EAE624B4D0C6008B2991 /* 122_买卖股票的最佳时机 II.cpp in Sources */,
				85D9FF5224CDDBD400A4C00A /* 283_移动零.cpp in Sources */,
				85F7EAE224B4C72C008B2991 /* 674_最长连续递增序列.cpp in Sources */,
				8596E2B325E409CD00509FBF /* 5 最长回文子串.cpp in Sources */,
				14DF4B1124C2C9E500769F04 /* 98_验证二叉搜索树.cpp in Sources */,
				14DF4B0F24C2C0FF00769F04 /* 94_二叉树的中序遍历.cpp in Sources */,
				14DF4B1E24C49E4800769F04 /* 17_电话号码的字母组合.cpp in Sources */,
				14315D8A25DBBC2A00FC0B16 /* 739 每日温度.cpp in Sources */,
				14315D6625D8E49800FC0B16 /* 面试题 16 16  部分排序.cpp in Sources */,
				14A17D2C24A5F13E001CCC5D /* 322_零钱兑换.cpp in Sources */,
				144F5EF425DC096F0072F724 /* 42 接雨水.cpp in Sources */,
				1498ED4624A86DC200F10081 /* 64_最小路径和.cpp in Sources */,
				14E4986324CA9B7400C4A465 /* 22_括号生成.cpp in Sources */,
				85A2D0AA25ED3FBC000F7D0C /* 17 电话号码的字母组合.cpp in Sources */,
				14EC53E8247C1DAF00B65186 /* 239_滑动窗口最大值.cpp in Sources */,
				85771A1125FE504800264333 /* 283 移动零.cpp in Sources */,
				858FEA4624D1D64B00436891 /* 50_Pow(x, n).cpp in Sources */,
				1495B4C9246C2D6700F95169 /* 2_两数相加.cpp in Sources */,
				14DCDDC824B0AE9F002E9BBA /* 300_最长上升子序列.cpp in Sources */,
				85771A1425FE576E00264333 /* 15 三数之和.cpp in Sources */,
				8590495C24E4375000959443 /* 54_螺旋矩阵.cpp in Sources */,
				14315D8325DA7B6300FC0B16 /* 239 滑动窗口最大值.cpp in Sources */,
				85C8B9E625E7F385001F69F6 /* 99 恢复二叉搜索树.cpp in Sources */,
				14DCE27924B9B0090067EB9D /* 1235_规划兼职工作.cpp in Sources */,
				85A2D0B425EFC5BF000F7D0C /* 113 路径总和 II.cpp in Sources */,
				144B983E24420E91003B5364 /* 75_颜色分类.cpp in Sources */,
				14FE466425E2446C00546429 /* 剑指 Offer 47 礼物的最大价值.cpp in Sources */,
				1498F0BC24A89B9700F10081 /* 72_编辑距离.cpp in Sources */,
				147B976B25DE6EE70065BA6F /* 面试题 01 09  字符串轮转.cpp in Sources */,
				85F7EAE424B4CB50008B2991 /* 63_不同路径 II.cpp in Sources */,
				85A48CA324B375ED001CA490 /* 70_爬楼梯.cpp in Sources */,
				14315D8725DABBF900FC0B16 /* 654 最大二叉树.cpp in Sources */,
				14315D6925D8F34200FC0B16 /* 977 有序数组的平方.cpp in Sources */,
				854E987424ACE1AA001E980E /* 1143_最长公共子序列.cpp in Sources */,
				857E1E3B24E9962300A8F8C9 /* 146_LRU缓存机制.cpp in Sources */,
				14F205E7248DFD5A0023F308 /* 42_接雨水.cpp in Sources */,
				85D9FF5424CDE38100A4C00A /* 1_两数之和.cpp in Sources */,
				14315D7B25D96CB200FC0B16 /* 234 回文链表.cpp in Sources */,
				14315D7225D912B900FC0B16 /* 2 两数相加.cpp in Sources */,
				1498ED4824A8749400F10081 /* 62_不同路径.cpp in Sources */,
				14FE466925E24E2A00546429 /* 121 买卖股票的最佳时机.cpp in Sources */,
				14315D7525D9199E00FC0B16 /* 160 相交链表.cpp in Sources */,
				85C8B9E225E6A544001F69F6 /* 236 二叉树的最近公共祖先.cpp in Sources */,
				14315D8025DA6ECC00FC0B16 /* 155 最小栈.cpp in Sources */,
				14DF4B1A24C4363000769F04 /* 102_二叉树的层序遍历.cpp in Sources */,
				858FEA4424D1CD9300436891 /* 15_三数之和.cpp in Sources */,
				14DF4B1624C4198300769F04 /* 101_对称二叉树.cpp in Sources */,
				85A48CA524B3794C001CA490 /* 198_打家劫舍.cpp in Sources */,
				14315D6025D81CA700FC0B16 /* 88 合并两个有序数组.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		144B983424420542003B5364 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.15;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
			};
			name = Debug;
		};
		144B983524420542003B5364 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.15;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
			};
			name = Release;
		};
		144B983724420542003B5364 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		144B983824420542003B5364 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		144B982A24420542003B5364 /* Build configuration list for PBXProject "Algorithm" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				144B983424420542003B5364 /* Debug */,
				144B983524420542003B5364 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		144B983624420542003B5364 /* Build configuration list for PBXNativeTarget "Algorithm" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				144B983724420542003B5364 /* Debug */,
				144B983824420542003B5364 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 144B982724420542003B5364 /* Project object */;
}
